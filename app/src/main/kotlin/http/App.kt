/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package http

import http.request.HttpRequest
import java.io.*
import java.net.InetSocketAddress
import java.net.ServerSocket

fun main(args: Array<String>) {

    println("start >>>")

    // Socket生成、IPとPort指定、SO_REUSEADDRオプション有効化
    val serverSocket = ServerSocket()
    serverSocket.bind(InetSocketAddress(Constants.HOST, Constants.PORT))
    serverSocket.reuseAddress = true
    println("listening on... ${serverSocket.localSocketAddress}")

    try {
        // 受信
        val socket = serverSocket.accept()

        socket.getOutputStream().use { ops ->
            socket.getInputStream().use { ips ->

                val bw = BufferedWriter(OutputStreamWriter(ops))
                val request = HttpRequest(ips)

                // リクエストヘッダ
                println(request.headerText())

                // リクエストボディ
                println(request.bodyText())

                // レスポンス
                val response = HttpResponse(Status.OK)

                if (request.isGetMethod()) {

                    response.addResponseHeader("Content-Type", ContentType.TEXT_HTML.toString())
                    response.setResponseBodyFile(File("/Users/aoyagi/http/app/src/main/resources/test.txt"))
                    response.writeFileOut(bw)

                } else {

                    response.addResponseHeader("Content-Type", ContentType.TEXT_HTML.toString())
                    response.setResponseBody("<h1>Test Kotlin!!</h1>")
                    response.writeOut(bw)
                }
            }
        }

    } catch (e: IOException) {
        println("CAUSE: ${e.cause}, MESSAGE: ${e.message}")
    }

    println("<<< end")

}
